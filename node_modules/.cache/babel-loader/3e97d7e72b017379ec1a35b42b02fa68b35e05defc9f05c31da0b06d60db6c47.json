{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\react\\\\work2\\\\todos\\\\src\\\\components\\\\Task-List\\\\Task-List.jsx\";\nimport React, { Component } from 'react';\nimport Task from '../Task/Task';\nimport EditTaskForm from '../Edit-Task-Form/Edit-Task-Form';\nimport './Task-List.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends Component {\n  render() {\n    const {\n      Tasks\n    } = this.props;\n    const TaskLists = Tasks.map(item => {\n      const {\n        id,\n        edit,\n        done,\n        description,\n        created\n      } = item;\n      let className;\n      done ? className = \"completed\" : className = \"\";\n      edit && !done ? className = \"editing\" : className = \"\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(Task, {\n          done: done,\n          description: description,\n          created: created,\n          onDestroy: () => this.props.onDestroy(id),\n          onDoneClick: () => this.props.onDoneClick(id),\n          onEdit: () => this.props.onEdit(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(EditTaskForm, {\n          description: description,\n          editDataItem: text => this.props.editDataItem(text, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: TaskLists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this);\n  }\n}\nTaskList.defaultProps = {\n  Tasks: []\n};\nTaskList.propTypes = {\n  Tasks: PropTypes.arrayOf(PropTypes.object)\n};\n;","map":{"version":3,"names":["React","Component","Task","EditTaskForm","PropTypes","jsxDEV","_jsxDEV","TaskList","render","Tasks","props","TaskLists","map","item","id","edit","done","description","created","className","children","onDestroy","onDoneClick","onEdit","fileName","_jsxFileName","lineNumber","columnNumber","editDataItem","text","defaultProps","propTypes","arrayOf","object"],"sources":["D:/git/react/work2/todos/src/components/Task-List/Task-List.jsx"],"sourcesContent":["import React,{Component} from 'react';\r\nimport Task from '../Task/Task';\r\nimport EditTaskForm from '../Edit-Task-Form/Edit-Task-Form';\r\nimport './Task-List.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class TaskList  extends Component {\r\n  \r\n  static defaultProps = {\r\n    Tasks : []\r\n         };\r\n  static  propTypes = {\r\n    Tasks: PropTypes.arrayOf(PropTypes.object)\r\n       };\r\n      \r\n\r\n  render() {  \r\n\r\n    \r\n   const {Tasks} = this.props;\r\n   \r\n    const TaskLists = Tasks.map((item)  => {\r\n\r\n      const {id,edit,done,description,created } = item;\r\n\r\n       \r\n      let className;\r\n\r\n      (done) ? className = \"completed\": className = \"\";\r\n      \r\n      (edit && !done) ? className = \"editing\" : className = \"\";\r\n\r\n       return(\r\n\r\n        <li key = {id}  className = {className}> \r\n\r\n     <Task  done = {done}  description = {description} created = {created} \r\n     onDestroy = {() => this.props.onDestroy(id)}\r\n     onDoneClick = {() => this.props.onDoneClick(id)} \r\n     onEdit = {() => this.props.onEdit(id)} />\r\n\r\n     <EditTaskForm  description = {description}\r\n      editDataItem = {(text)  =>   this.props.editDataItem(text,id)}  />\r\n       </li>\r\n\r\n     );\r\n      })\r\n  \r\n    return (\r\n    \r\n       <ul className=\"todo-list\">\r\n      {TaskLists}\r\n      </ul>\r\n    );\r\n}\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAO,iBAAiB;AACxB,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlC,eAAe,MAAMC,QAAQ,SAAUN,SAAS,CAAC;EAU/CO,MAAMA,CAAA,EAAG;IAGR,MAAM;MAACC;IAAK,CAAC,GAAG,IAAI,CAACC,KAAK;IAEzB,MAAMC,SAAS,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAM;MAErC,MAAM;QAACC,EAAE;QAACC,IAAI;QAACC,IAAI;QAACC,WAAW;QAACC;MAAQ,CAAC,GAAGL,IAAI;MAGhD,IAAIM,SAAS;MAEZH,IAAI,GAAIG,SAAS,GAAG,WAAW,GAAEA,SAAS,GAAG,EAAE;MAE/CJ,IAAI,IAAI,CAACC,IAAI,GAAIG,SAAS,GAAG,SAAS,GAAGA,SAAS,GAAG,EAAE;MAEvD,oBAECb,OAAA;QAAgBa,SAAS,EAAIA,SAAU;QAAAC,QAAA,gBAE1Cd,OAAA,CAACJ,IAAI;UAAEc,IAAI,EAAIA,IAAK;UAAEC,WAAW,EAAIA,WAAY;UAACC,OAAO,EAAIA,OAAQ;UACrEG,SAAS,EAAIA,CAAA,KAAM,IAAI,CAACX,KAAK,CAACW,SAAS,CAACP,EAAE,CAAE;UAC5CQ,WAAW,EAAIA,CAAA,KAAM,IAAI,CAACZ,KAAK,CAACY,WAAW,CAACR,EAAE,CAAE;UAChDS,MAAM,EAAIA,CAAA,KAAM,IAAI,CAACb,KAAK,CAACa,MAAM,CAACT,EAAE;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEzCrB,OAAA,CAACH,YAAY;UAAEc,WAAW,EAAIA,WAAY;UACzCW,YAAY,EAAKC,IAAI,IAAQ,IAAI,CAACnB,KAAK,CAACkB,YAAY,CAACC,IAAI,EAACf,EAAE;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GARrDb,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CAAC;IAGN,CAAC,CAAC;IAEJ,oBAEGrB,OAAA;MAAIa,SAAS,EAAC,WAAW;MAAAC,QAAA,EACzBT;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEX;AACA;AAjDqBpB,QAAQ,CAEpBuB,YAAY,GAAG;EACpBrB,KAAK,EAAG;AACH,CAAC;AAJWF,QAAQ,CAKnBwB,SAAS,GAAG;EAClBtB,KAAK,EAAEL,SAAS,CAAC4B,OAAO,CAAC5B,SAAS,CAAC6B,MAAM;AACtC,CAAC;AA0CP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}